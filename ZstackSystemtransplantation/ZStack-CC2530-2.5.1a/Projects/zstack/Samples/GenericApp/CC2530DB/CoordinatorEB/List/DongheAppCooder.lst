###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         06/Dec/2018  23:58:45 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\Source\ #
#                          DongheAppCooder.c                                  #
#    Command line       =  -f C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2 #
#                          530-2.5.1a\Projects\zstack\Samples\GenericApp\CC25 #
#                          30DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg          #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2 #
#                          530-2.5.1a\Projects\zstack\Samples\GenericApp\CC25 #
#                          30DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg         #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 C:\Users\1314\Desktop\Zstac #
#                          kœµÕ≥“∆÷≤\ZStack-CC2530-2.5.1a\Projects\zstack\Sam #
#                          ples\GenericApp\Source\DongheAppCooder.c -D        #
#                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D            #
#                          xMT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -lC           #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\CoordinatorEB\List\ -lA                          #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\CoordinatorEB\List\ --diag_suppress Pe001,Pa010  #
#                          -o C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2 #
#                          530-2.5.1a\Projects\zstack\Samples\GenericApp\CC25 #
#                          30DB\CoordinatorEB\Obj\ -e --no_code_motion        #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2 #
#                          530-2.5.1a\Projects\zstack\Samples\GenericApp\CC25 #
#                          30DB\ -I C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZSta #
#                          ck-CC2530-2.5.1a\Projects\zstack\Samples\GenericAp #
#                          p\CC2530DB\..\Source\ -I                           #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\ZMain\TI2530DB\ -I                      #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\hal\include\ -I        #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\hal\target\CC2530EB\   #
#                          -I C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2 #
#                          530-2.5.1a\Projects\zstack\Samples\GenericApp\CC25 #
#                          30DB\..\..\..\..\..\Components\mac\include\ -I     #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\mac\high_level\ -I     #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\mac\low_level\srf04\   #
#                          -I C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2 #
#                          530-2.5.1a\Projects\zstack\Samples\GenericApp\CC25 #
#                          30DB\..\..\..\..\..\Components\mac\low_level\srf04 #
#                          \single_chip\ -I C:\Users\1314\Desktop\ZstackœµÕ≥“ #
#                          ∆÷≤\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\G #
#                          enericApp\CC2530DB\..\..\..\..\..\Components\mt\   #
#                          -I C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2 #
#                          530-2.5.1a\Projects\zstack\Samples\GenericApp\CC25 #
#                          30DB\..\..\..\..\..\Components\osal\include\ -I    #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\services\saddr\ -I     #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\services\sdata\ -I     #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\stack\af\ -I           #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\stack\nwk\ -I          #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\stack\sapi\ -I         #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\stack\sec\ -I          #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\stack\sys\ -I          #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\stack\zdo\ -I          #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\zmac\ -I               #
#                          C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\..\..\Components\zmac\f8w\ -Ohz         #
#                          --require_prototypes                               #
#    List file          =  C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\CoordinatorEB\List\DongheAppCooder.lst           #
#    Object file        =  C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\CoordinatorEB\Obj\DongheAppCooder.r51            #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\1314\Desktop\ZstackœµÕ≥“∆÷≤\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\GenericApp\Source\DongheAppCooder.c
      1          
      2          #include <string.h>
      3          #include "DongheApp.h"
      4          #include "OSAL_DongheCooder.h"
      5          #include "hal_lcd.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
      6          #include "hal_led.h"
      7          #include "hal_key.h"
      8          #include "hal_uart.h"
      9          #include "OnBoard.h"
     10          #include "OSAL.h"
     11          #include "AF.h"
     12          #include "ZDApp.h"
     13          #include "ZDObject.h"
     14          #include "ZDProfile.h"
     15          #include "MT.h"
     16          #include "mt_uart.h"
     17          
     18          #define GENERICAPP_EVT 0x0001
     19          
     20          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     21          byte DhAppCooderManage_TaskID;   // Task ID for internal task/event processing
   \                     DhAppCooderManage_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     22                                    // This variable will be received when
     23                                    // DhAppCooderManage_Init() is called.

   \                                 In  segment XDATA_I, align 1, keep-with-next
     24          devStates_t DhAppCooderManage_NwkState=DEV_INIT;
   \                     DhAppCooderManage_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for DhAppCooderManage_NwkState>`
   \   000001                REQUIRE __INIT_XDATA_I
     25          
     26          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     27          byte DhAppCooderManage_TransID=0;  // This is the unique message ID (counter)
   \                     DhAppCooderManage_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     28          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     29          afAddrType_t MySendtest_Periodic_DstAddr;
   \                     MySendtest_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     30          #define SERIAL_APP_PORT          0

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     31          endPointDesc_t  MySendtest_epDesc;
   \                     MySendtest_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     32          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     33          uint8 SampleAppPeriodicCounter = 'z';
   \                     SampleAppPeriodicCounter:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for SampleAppPeriodicCounter>`
   \   000001                REQUIRE __INIT_XDATA_I
     34          
     35          
     36          /*********************************************************************
     37           * LOCAL FUNCTIONS
     38           */
     39          void DhAppCooderManage_ProcessZDOStateChange( void );
     40          void DhAppCooderManage_ProcessMSGData( afIncomingMSGPacket_t *msg );
     41          void DhAppCooderManage_HandleKeys(byte keys );
     42          void SampleApp_SerialCMD(mtOSALSerialData_t *cmdMsg);
     43          void SampleApp_SendPeriodicMessage( void );
     44          
     45          /*********************************************************************
     46           * NETWORK LAYER CALLBACKS
     47           */
     48          
     49          /*********************************************************************
     50           * PUBLIC FUNCTIONS
     51           */
     52          
     53          /*********************************************************************
     54           * @fn      DhAppCooderManage_Init
     55           *
     56           * @brief   Initialization function for the Generic App Task.
     57           *          This is called during initialization and should contain
     58           *          any application specific initialization (ie. hardware
     59           *          initialization/setup, table initialization, power up
     60           *          notificaiton ... ).
     61           *
     62           * @param   task_id - the ID assigned by OSAL.  This ID should be
     63           *                    used to send messages and set timers.
     64           *
     65           * @return  none
     66           */
     67          
     68          
     69          

   \                                 In  segment XDATA_ROM_C, align 1
     70          const uint16 MySendtest_OUTClusterList[MySendtest_MAX_OUTCLUSTERS]=
   \                     MySendtest_OUTClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
     71          {
     72            MySendtest_PERIODIC_CLUSTERID,
     73            MySendtest_GUANG_CLUSTERID,
     74            MySendtest_WENDU_CLUSTERID,
     75            MySendtest_SHIDU_CLUSTERID
     76          };
     77          

   \                                 In  segment XDATA_ROM_C, align 1
     78          const uint16 MySendtest_INClusterList[MySendtest_MAX_INCLUSTERS]=
   \                     MySendtest_INClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
     79          {
     80            MySendtest_SINGLE_CLUSTERID,
     81            MySendtest_REGUANG_CLUSTERID,
     82            MySendtest_REWENDU_CLUSTERID,
     83            MySendtest_RESHIDU_CLUSTERID
     84          };
     85          

   \                                 In  segment XDATA_ROM_C, align 1
     86          const SimpleDescriptionFormat_t MySendtest_SimpleDesc=
   \                     MySendtest_SimpleDesc:
   \   000000   10           DB 16
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   04           DB 4
   \   000007   ....         DW MySendtest_INClusterList
   \   000009   04           DB 4
   \   00000A   ....         DW MySendtest_OUTClusterList
     87          {
     88            MySendtest_ENDPOINT,
     89            MySendtest_PROFID,
     90            MySendtest_DEVICEID,
     91            MySendtest_DEVICE_VERSION,
     92            MySendtest_FLAGS,
     93            MySendtest_MAX_INCLUSTERS,
     94            (uint16*)MySendtest_INClusterList,
     95            MySendtest_MAX_OUTCLUSTERS,
     96            (uint16*)MySendtest_OUTClusterList
     97          };
     98          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     99          static void SerialApp_CallBack(uint8 port,uint8 event)
   \                     SerialApp_CallBack:
    100          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV     A,#-0xa
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
    101            uint8 sBuf[10]={0};
   \   00000C   85..82       MOV     DPL,?XSP + 0
   \   00000F   85..83       MOV     DPH,?XSP + 1
   \   000012   AC82         MOV     R4,DPL
   \   000014   AD83         MOV     R5,DPH
   \   000016   7583..       MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
   \   000019   7582..       MOV     DPL,#`?<Constant {0}>` & 0xff
   \   00001C   740A         MOV     A,#0xa
   \   00001E   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    102            uint16 nLen=0;
    103          
    104            if(event != HAL_UART_TX_EMPTY)
   \   000021   7410         MOV     A,#0x10
   \   000023   6E           XRL     A,R6
   \   000024   6013         JZ      ??SerialApp_CallBack_0
    105            {
    106              nLen = HalUARTRead(SERIAL_APP_PORT,sBuf,10);
   \   000026                ; Setup parameters for call to function HalUARTRead
   \   000026   7C0A         MOV     R4,#0xa
   \   000028   7D00         MOV     R5,#0x0
   \   00002A   85..82       MOV     DPL,?XSP + 0
   \   00002D   85..83       MOV     DPH,?XSP + 1
   \   000030   AA82         MOV     R2,DPL
   \   000032   AB83         MOV     R3,DPH
   \   000034   7900         MOV     R1,#0x0
   \   000036   12....       LCALL   ??HalUARTRead?relay
    107              if(nLen>0)
    108              {
    109              }
    110            }
    111          }
   \                     ??SerialApp_CallBack_0:
   \   000039   740A         MOV     A,#0xa
   \   00003B   12....       LCALL   ?DEALLOC_XSTACK8
   \   00003E                REQUIRE ?Subroutine0
   \   00003E                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    112          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    113          static void InitUart(void)
   \                     InitUart:
    114          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 29
   \   000004   74E3         MOV     A,#-0x1d
   \   000006   12....       LCALL   ?ALLOC_XSTACK8
    115            halUARTCfg_t uartConfig;
    116            uartConfig.configured            = TRUE;
   \   000009   85..82       MOV     DPL,?XSP + 0
   \   00000C   85..83       MOV     DPH,?XSP + 1
   \   00000F   7401         MOV     A,#0x1
   \   000011   F0           MOVX    @DPTR,A
    117            uartConfig.baudRate              = HAL_UART_BR_57600;
   \   000012   12....       LCALL   ?XSTACK_DISP0_8
   \   000015   7403         MOV     A,#0x3
   \   000017   F0           MOVX    @DPTR,A
    118            uartConfig.flowControl           = FALSE;
   \   000018   14           DEC     A
   \   000019   12....       LCALL   ?XSTACK_DISP0_8
   \   00001C   E4           CLR     A
   \   00001D   F0           MOVX    @DPTR,A
    119            uartConfig.flowControlThreshold  = 64;
   \   00001E   7403         MOV     A,#0x3
   \   000020   12....       LCALL   ?XSTACK_DISP0_8
   \   000023   7440         MOV     A,#0x40
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \   000027   E4           CLR     A
   \   000028   F0           MOVX    @DPTR,A
    120            uartConfig.rx.maxBufSize         = 128;
   \   000029   740A         MOV     A,#0xa
   \   00002B   12....       LCALL   ?XSTACK_DISP0_8
   \   00002E   7480         MOV     A,#-0x80
   \   000030   F0           MOVX    @DPTR,A
   \   000031   A3           INC     DPTR
   \   000032   E4           CLR     A
   \   000033   F0           MOVX    @DPTR,A
    121            uartConfig.tx.maxBufSize         = 128;
   \   000034   7412         MOV     A,#0x12
   \   000036   12....       LCALL   ?XSTACK_DISP0_8
   \   000039   7480         MOV     A,#-0x80
   \   00003B   F0           MOVX    @DPTR,A
   \   00003C   A3           INC     DPTR
   \   00003D   E4           CLR     A
   \   00003E   F0           MOVX    @DPTR,A
    122            uartConfig.idleTimeout          = 6;
   \   00003F   7405         MOV     A,#0x5
   \   000041   12....       LCALL   ?XSTACK_DISP0_8
   \   000044   7406         MOV     A,#0x6
   \   000046   F0           MOVX    @DPTR,A
    123            uartConfig.intEnable             = TRUE;
   \   000047   7416         MOV     A,#0x16
   \   000049   12....       LCALL   ?XSTACK_DISP0_8
   \   00004C   7401         MOV     A,#0x1
   \   00004E   F0           MOVX    @DPTR,A
    124            uartConfig.callBackFunc          = SerialApp_CallBack;
   \   00004F   741B         MOV     A,#0x1b
   \   000051   12....       LCALL   ?XSTACK_DISP0_8
   \   000054   74..         MOV     A,#??SerialApp_CallBack?relay & 0xff
   \   000056   F0           MOVX    @DPTR,A
   \   000057   A3           INC     DPTR
   \   000058   74..         MOV     A,#(??SerialApp_CallBack?relay >> 8) & 0xff
   \   00005A   F0           MOVX    @DPTR,A
    125          
    126            HalUARTOpen(SERIAL_APP_PORT,&uartConfig);
   \   00005B                ; Setup parameters for call to function HalUARTOpen
   \   00005B   85..82       MOV     DPL,?XSP + 0
   \   00005E   85..83       MOV     DPH,?XSP + 1
   \   000061   AA82         MOV     R2,DPL
   \   000063   AB83         MOV     R3,DPH
   \   000065   7900         MOV     R1,#0x0
   \   000067   12....       LCALL   ??HalUARTOpen?relay
    127          }
   \   00006A   741D         MOV     A,#0x1d
   \   00006C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006F                REQUIRE ?Subroutine1
   \   00006F                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    128          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    129          void DongheAppCooder_Init( uint8 task_id )
   \                     DongheAppCooder_Init:
    130          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    131            DhAppCooderManage_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#DhAppCooderManage_TaskID
   \   00000A   F0           MOVX    @DPTR,A
    132            MySendtest_Periodic_DstAddr.addrMode=afAddrBroadcast;
   \   00000B   90....       MOV     DPTR,#MySendtest_Periodic_DstAddr + 8
   \   00000E   740F         MOV     A,#0xf
   \   000010   F0           MOVX    @DPTR,A
    133            MySendtest_Periodic_DstAddr.endPoint=MySendtest_ENDPOINT;
   \   000011   A3           INC     DPTR
   \   000012   04           INC     A
   \   000013   F0           MOVX    @DPTR,A
    134            MySendtest_Periodic_DstAddr.addr.shortAddr=0xffff;
   \   000014   90....       MOV     DPTR,#MySendtest_Periodic_DstAddr
   \   000017   74FF         MOV     A,#-0x1
   \   000019   F0           MOVX    @DPTR,A
   \   00001A   A3           INC     DPTR
   \   00001B   F0           MOVX    @DPTR,A
    135          
    136          
    137            //DhAppCooderManage_TransID = 0;
    138            MySendtest_epDesc.endPoint=MySendtest_ENDPOINT;
   \   00001C   90....       MOV     DPTR,#MySendtest_epDesc
   \   00001F   7410         MOV     A,#0x10
   \   000021   F0           MOVX    @DPTR,A
    139            MySendtest_epDesc.task_id=&DhAppCooderManage_TaskID;
   \   000022   A3           INC     DPTR
   \   000023   74..         MOV     A,#DhAppCooderManage_TaskID & 0xff
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \   000027   74..         MOV     A,#(DhAppCooderManage_TaskID >> 8) & 0xff
   \   000029   F0           MOVX    @DPTR,A
    140            MySendtest_epDesc.simpleDesc=(SimpleDescriptionFormat_t *)&MySendtest_SimpleDesc ;
   \   00002A   A3           INC     DPTR
   \   00002B   74..         MOV     A,#MySendtest_SimpleDesc & 0xff
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   74..         MOV     A,#(MySendtest_SimpleDesc >> 8) & 0xff
   \   000031   F0           MOVX    @DPTR,A
    141            MySendtest_epDesc.latencyReq=noLatencyReqs;
   \   000032   A3           INC     DPTR
   \   000033   E4           CLR     A
   \   000034   F0           MOVX    @DPTR,A
    142          
    143          
    144            afRegister(&MySendtest_epDesc);
   \   000035                ; Setup parameters for call to function afRegister
   \   000035   7A..         MOV     R2,#MySendtest_epDesc & 0xff
   \   000037   7B..         MOV     R3,#(MySendtest_epDesc >> 8) & 0xff
   \   000039   12....       LCALL   ??afRegister?relay
    145            RegisterForKeys(DhAppCooderManage_TaskID);
   \   00003C                ; Setup parameters for call to function RegisterForKeys
   \   00003C   90....       MOV     DPTR,#DhAppCooderManage_TaskID
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   F9           MOV     R1,A
   \   000041   12....       LCALL   ??RegisterForKeys?relay
    146          
    147            InitUart();
   \   000044                ; Setup parameters for call to function InitUart
   \   000044   12....       LCALL   ??InitUart?relay
    148            MT_UartRegisterTaskID(task_id);
   \   000047                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   000047   EE           MOV     A,R6
   \   000048   F9           MOV     R1,A
   \   000049   12....       LCALL   ??MT_UartRegisterTaskID?relay
    149            HalUARTWrite(0,"Hello Wrold!",12);
   \   00004C                ; Setup parameters for call to function HalUARTWrite
   \   00004C   7C0C         MOV     R4,#0xc
   \   00004E   7D00         MOV     R5,#0x0
   \   000050   7A..         MOV     R2,#`?<Constant "Hello Wrold!">` & 0xff
   \   000052   7B..         MOV     R3,#(`?<Constant "Hello Wrold!">` >> 8) & 0xff
   \   000054   7900         MOV     R1,#0x0
   \   000056   12....       LCALL   ??HalUARTWrite?relay
    150          }
   \   000059   02....       LJMP    ?Subroutine0 & 0xFFFF
    151          
    152          /*********************************************************************
    153           * @fn      DhAppCooderManage_ProcessEvent
    154           *
    155           * @brief   Generic Application Task event processor.  This function
    156           *          is called to process all events for the task.  Events
    157           *          include timers, messages and any other user defined events.
    158           *
    159           * @param   task_id  - The OSAL assigned task ID.
    160           * @param   events - events to process.  This is a bit map and can
    161           *                   contain more than one event.
    162           *
    163           * @return  none
    164           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    165          uint16 DongheAppCooder_ProcessEvent( uint8 task_id, uint16 events )
   \                     DongheAppCooder_ProcessEvent:
    166          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    167            afIncomingMSGPacket_t *MSGpkt; //afIncomingMSGPacket_t
    168            //afDataConfirm_t *afDataConfirm;
    169          
    170            // Data Confirmation message fields
    171            //byte sentEP;
    172            //ZStatus_t sentStatus;
    173            //byte sentTransID;       // This should match the value sent
    174            (void)task_id;  // Intentionally unreferenced parameter
    175          
    176            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   6059         JZ      ??DongheAppCooder_ProcessEvent_0
    177            {
    178              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( DhAppCooderManage_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   800E         SJMP    ??DongheAppCooder_ProcessEvent_1
    179              while ( MSGpkt )
    180              {
    181                switch ( MSGpkt->hdr.event )
    182                {
    183                  case KEY_CHANGE:
    184                    DhAppCooderManage_HandleKeys(((keyChange_t *)MSGpkt)->keys );
    185                    break;
    186          
    187                  case AF_INCOMING_MSG_CMD:
    188                    DhAppCooderManage_ProcessMSGData(MSGpkt);
    189                    break;
    190          
    191                  case ZDO_STATE_CHANGE:
    192                    DhAppCooderManage_NwkState = (devStates_t)(MSGpkt->hdr.status);
    193                    if (DhAppCooderManage_NwkState == DEV_ZB_COORD)
    194                    {
    195                      HalLedSet (HAL_LED_1, HAL_LED_MODE_OFF);
    196                      HalLedBlink(HAL_LED_2,5,50,1000);
    197          
    198                      //DhAppCooderManage_ProcessZDOStateChange();
    199                    }
    200                    break;
    201          
    202                   case CMD_SERIAL_MSG:
    203                       SampleApp_SerialCMD((mtOSALSerialData_t *)MSGpkt);
   \                     ??DongheAppCooder_ProcessEvent_2:
   \   00000F                ; Setup parameters for call to function SampleApp_SerialCMD
   \   00000F   AA..         MOV     R2,?V0 + 0
   \   000011   AB..         MOV     R3,?V0 + 1
   \   000013   12....       LCALL   ??SampleApp_SerialCMD?relay
    204                       break;
    205          
    206                  default:
    207                    break;
    208                }
    209          
    210                // Release the memory
    211                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??DongheAppCooder_ProcessEvent_3:
   \   000016                ; Setup parameters for call to function osal_msg_deallocate
   \   000016   AA..         MOV     R2,?V0 + 0
   \   000018   AB..         MOV     R3,?V0 + 1
   \   00001A   12....       LCALL   ??osal_msg_deallocate?relay
    212          
    213                // Next
    214                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( DhAppCooderManage_TaskID );
   \   00001D                ; Setup parameters for call to function osal_msg_receive
   \                     ??DongheAppCooder_ProcessEvent_1:
   \   00001D   90....       MOV     DPTR,#DhAppCooderManage_TaskID
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??osal_msg_receive?relay
   \   000025   8A..         MOV     ?V0 + 0,R2
   \   000027   8B..         MOV     ?V0 + 1,R3
   \   000029   E5..         MOV     A,?V0 + 0
   \   00002B   45..         ORL     A,?V0 + 1
   \   00002D   602F         JZ      ??DongheAppCooder_ProcessEvent_4
   \   00002F   85..82       MOV     DPL,?V0 + 0
   \   000032   85..83       MOV     DPH,?V0 + 1
   \   000035   E0           MOVX    A,@DPTR
   \   000036   14           DEC     A
   \   000037   60D6         JZ      ??DongheAppCooder_ProcessEvent_2
   \   000039   24E7         ADD     A,#-0x19
   \   00003B   6006         JZ      ??DongheAppCooder_ProcessEvent_5
   \   00003D   2449         ADD     A,#0x49
   \   00003F   600B         JZ      ??DongheAppCooder_ProcessEvent_6
   \   000041   80D3         SJMP    ??DongheAppCooder_ProcessEvent_3
   \                     ??DongheAppCooder_ProcessEvent_5:
   \   000043                ; Setup parameters for call to function DhAppCooderManage_ProcessMSGData
   \   000043   AA..         MOV     R2,?V0 + 0
   \   000045   AB..         MOV     R3,?V0 + 1
   \   000047   12....       LCALL   ??DhAppCooderManage_ProcessMSGData?relay
   \   00004A   80CA         SJMP    ??DongheAppCooder_ProcessEvent_3
   \                     ??DongheAppCooder_ProcessEvent_6:
   \   00004C   A3           INC     DPTR
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   90....       MOV     DPTR,#DhAppCooderManage_NwkState
   \   000051   F0           MOVX    @DPTR,A
   \   000052   6409         XRL     A,#0x9
   \   000054   70C0         JNZ     ??DongheAppCooder_ProcessEvent_3
   \   000056                ; Setup parameters for call to function HalLedSet
   \   000056   12....       LCALL   ?Subroutine5 & 0xFFFF
    215              }
   \                     ??CrossCallReturnLabel_2:
   \   000059   12....       LCALL   ??HalLedBlink?relay
   \   00005C   80B8         SJMP    ??DongheAppCooder_ProcessEvent_3
    216          
    217              // return unprocessed events
    218              return (events ^ SYS_EVENT_MSG);
   \                     ??DongheAppCooder_ProcessEvent_4:
   \   00005E   EE           MOV     A,R6
   \   00005F   FA           MOV     R2,A
   \   000060   EF           MOV     A,R7
   \   000061   6480         XRL     A,#0x80
   \                     ??DongheAppCooder_ProcessEvent_7:
   \   000063   FB           MOV     R3,A
   \   000064   801D         SJMP    ??DongheAppCooder_ProcessEvent_8
    219            }
    220          
    221            if(events & GENERICAPP_EVT)
   \                     ??DongheAppCooder_ProcessEvent_0:
   \   000066   EE           MOV     A,R6
   \   000067   A2E0         MOV     C,0xE0 /* A   */.0
   \   000069   5014         JNC     ??DongheAppCooder_ProcessEvent_9
    222            {
    223              HalLedBlink (HAL_LED_1,5,50,1000);
   \   00006B                ; Setup parameters for call to function HalLedBlink
   \   00006B   7CE8         MOV     R4,#-0x18
   \   00006D   7D03         MOV     R5,#0x3
   \   00006F   7B32         MOV     R3,#0x32
   \   000071   7A05         MOV     R2,#0x5
   \   000073   7901         MOV     R1,#0x1
   \   000075   12....       LCALL   ??HalLedBlink?relay
    224              return (events ^ GENERICAPP_EVT);
   \   000078   EE           MOV     A,R6
   \   000079   6401         XRL     A,#0x1
   \   00007B   FA           MOV     R2,A
   \   00007C   EF           MOV     A,R7
   \   00007D   80E4         SJMP    ??DongheAppCooder_ProcessEvent_7
    225            }
    226          
    227            return 0;
   \                     ??DongheAppCooder_ProcessEvent_9:
   \   00007F   7A00         MOV     R2,#0x0
   \   000081   7B00         MOV     R3,#0x0
   \                     ??DongheAppCooder_ProcessEvent_8:
   \   000083                REQUIRE ?Subroutine2
   \   000083                ; // Fall through to label ?Subroutine2
    228          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   7A00         MOV     R2,#0x0
   \   000002   7901         MOV     R1,#0x1
   \   000004   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   000007   7902         MOV     R1,#0x2
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   12....       LCALL   ??HalLedSet?relay
   \   000003                ; Setup parameters for call to function HalLedBlink
   \   000003                ; Setup parameters for call to function HalLedBlink
   \   000003                ; Setup parameters for call to function HalLedBlink
   \   000003   7CE8         MOV     R4,#-0x18
   \   000005   7D03         MOV     R5,#0x3
   \   000007   7B32         MOV     R3,#0x32
   \   000009   7A05         MOV     R2,#0x5
   \   00000B   22           RET
    229          
    230          /*********************************************************************
    231           * Event Generation Functions
    232           */
    233          
    234          /*********************************************************************
    235           * @fn      DhAppCooderManage_ProcessZDOMsgs()
    236           *
    237           * @brief   Process response messages
    238           *
    239           * @param   none
    240           *
    241           * @return  none
    242           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    243          void DhAppCooderManage_ProcessZDOStateChange()
   \                     DhAppCooderManage_ProcessZDOStateChange:
    244          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    245            HalLedBlink (HAL_LED_ALL,5,50,2000);
   \   000004                ; Setup parameters for call to function HalLedBlink
   \   000004   7CD0         MOV     R4,#-0x30
   \   000006   7D07         MOV     R5,#0x7
   \   000008   7B32         MOV     R3,#0x32
   \   00000A   7A05         MOV     R2,#0x5
   \   00000C   7903         MOV     R1,#0x3
   \   00000E   12....       LCALL   ??HalLedBlink?relay
    246            osal_start_timerEx(DhAppCooderManage_TaskID,GENERICAPP_EVT,5000);
   \   000011                ; Setup parameters for call to function osal_start_timerEx
   \   000011   7C88         MOV     R4,#-0x78
   \   000013   7D13         MOV     R5,#0x13
   \   000015   7A01         MOV     R2,#0x1
   \   000017   7B00         MOV     R3,#0x0
   \   000019   90....       MOV     DPTR,#DhAppCooderManage_TaskID
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   F9           MOV     R1,A
   \   00001E   12....       LCALL   ??osal_start_timerEx?relay
    247            HalLedSet(HAL_LED_1,HAL_LED_MODE_OFF);
   \   000021                ; Setup parameters for call to function HalLedSet
   \   000021   7A00         MOV     R2,#0x0
   \   000023   7901         MOV     R1,#0x1
   \   000025   12....       LCALL   ??HalLedSet?relay
    248            HalLedSet(HAL_LED_2,HAL_LED_MODE_OFF);
   \   000028                ; Setup parameters for call to function HalLedSet
   \   000028   7A00         MOV     R2,#0x0
   \   00002A   7902         MOV     R1,#0x2
   \   00002C   12....       LCALL   ??HalLedSet?relay
    249          }
   \   00002F   02....       LJMP    ?Subroutine1 & 0xFFFF
    250          
    251          
    252          
    253          /*********************************************************************
    254           * @fn      DhAppCooderManage_HandleKeys
    255           *
    256           * @brief   Handles all key events for this device.
    257           *
    258           * @param   shift - true if in shift/alt.
    259           * @param   keys - bit field for key events. Valid entries:
    260           *                 HAL_KEY_SW_4
    261           *                 HAL_KEY_SW_3
    262           *                 HAL_KEY_SW_2
    263           *                 HAL_KEY_SW_1
    264           *
    265           * @return  none
    266           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    267          void DhAppCooderManage_HandleKeys(uint8 keys )
   \                     DhAppCooderManage_HandleKeys:
    268          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    269          
    270            // Shift is used to make each button/switch dual purpose.
    271              if ( keys & HAL_KEY_SW_1 )
    272              {
    273              }
    274          
    275              if ( keys & HAL_KEY_SW_2 )
    276              {
    277              }
    278          
    279              if ( keys & HAL_KEY_SW_3 )
    280              {
    281              }
    282          
    283              if ( keys & HAL_KEY_SW_4 )
    284              {
    285              }
    286              if ( keys & HAL_KEY_SW_5 )
    287              {
    288              }
    289              if ( keys & HAL_KEY_SW_6 )
    290              {
    291              }
    292          }
   \   000000   02....       LJMP    ?BRET
    293          
    294          
    295          /************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    296          void SampleApp_SendPeriodicMessage( void )
   \                     SampleApp_SendPeriodicMessage:
    297          {                  //MySendtest_REWENDU_CLUSTERID–≠µ˜∆˜µƒ
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    298            if ( AF_DataRequest( &MySendtest_Periodic_DstAddr, &MySendtest_epDesc,
    299                                 MySendtest_PERIODIC_CLUSTERID,
    300                                 1,
    301                                 (uint8*)&SampleAppPeriodicCounter,
    302                                 &DhAppCooderManage_TransID,
    303                                 AF_DISCV_ROUTE,
    304                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000005                ; Setup parameters for call to function AF_DataRequest
   \   000005   75..1E       MOV     ?V0 + 0,#0x1e
   \   000008   78..         MOV     R0,#?V0 + 0
   \   00000A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00000D   75....       MOV     ?V0 + 0,#DhAppCooderManage_TransID & 0xff
   \   000010   75....       MOV     ?V0 + 1,#(DhAppCooderManage_TransID >> 8) & 0xff
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000018   75....       MOV     ?V0 + 0,#SampleAppPeriodicCounter & 0xff
   \   00001B   75....       MOV     ?V0 + 1,#(SampleAppPeriodicCounter >> 8) & 0xff
   \   00001E   78..         MOV     R0,#?V0 + 0
   \   000020   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000023   75..01       MOV     ?V0 + 0,#0x1
   \   000026   75..00       MOV     ?V0 + 1,#0x0
   \   000029   78..         MOV     R0,#?V0 + 0
   \   00002B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002E   78..         MOV     R0,#?V0 + 0
   \   000030   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000033   7920         MOV     R1,#0x20
   \   000035   7C..         MOV     R4,#MySendtest_epDesc & 0xff
   \   000037   7D..         MOV     R5,#(MySendtest_epDesc >> 8) & 0xff
   \   000039   7A..         MOV     R2,#MySendtest_Periodic_DstAddr & 0xff
   \   00003B   7B..         MOV     R3,#(MySendtest_Periodic_DstAddr >> 8) & 0xff
   \   00003D   12....       LCALL   ??AF_DataRequest?relay
   \   000040   7409         MOV     A,#0x9
   \   000042   12....       LCALL   ?DEALLOC_XSTACK8
    305            {
    306            }
    307            else
    308            {
    309              // Error occurred in request to send.
    310            }
    311          }
   \   000045                REQUIRE ?Subroutine3
   \   000045                ; // Fall through to label ?Subroutine3

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    312          void DhAppCooderManage_ProcessMSGData( afIncomingMSGPacket_t *msg )
   \                     DhAppCooderManage_ProcessMSGData:
    313          {   //Ω” ‹¬∑”…∆˜ ˝æ›…œ»•∑˛ŒÒ∆˜
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    314            switch ( msg->clusterId )
   \   000009   8E82         MOV     DPL,R6
   \   00000B   8F83         MOV     DPH,R7
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   F5..         MOV     ?V0 + 0,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F5..         MOV     ?V0 + 1,A
   \   000018   78..         MOV     R0,#?V0 + 0
   \   00001A   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for DhAppCooderManage_ProcessMSGDa_0`:
   \   00001D   0100         DW        1
   \   00001F   03           DB        3
   \   000020   ....         DW        ??DhAppCooderManage_ProcessMSGData_0
   \   000022   ....         DW        ??DhAppCooderManage_ProcessMSGData_1
   \   000024   ....         DW        ??DhAppCooderManage_ProcessMSGData_1
   \   000026   ....         DW        ??DhAppCooderManage_ProcessMSGData_2
   \   000028   ....         DW        ??DhAppCooderManage_ProcessMSGData_1
    315            {
    316              case MySendtest_REWENDU_CLUSTERID:
    317                HalUARTWrite(0,"12\r\n",4);
   \                     ??DhAppCooderManage_ProcessMSGData_2:
   \   00002A   75....       MOV     ?V0 + 0,#`?<Constant "12\\r\\n">` & 0xff
   \   00002D   75....       MOV     ?V0 + 1,#(`?<Constant "12\\r\\n">` >> 8) & 0xff
   \   000030                ; Setup parameters for call to function HalUARTWrite
   \   000030   7C04         MOV     R4,#0x4
   \   000032   7D00         MOV     R5,#0x0
   \   000034   AA..         MOV     R2,?V0 + 0
   \   000036   AB..         MOV     R3,?V0 + 1
   \   000038   7900         MOV     R1,#0x0
   \   00003A   12....       LCALL   ??HalUARTWrite?relay
    318                HalUARTWrite(0,msg->cmd.Data,msg->cmd.DataLength);
   \   00003D                ; Setup parameters for call to function HalUARTWrite
   \   00003D   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000040   7900         MOV     R1,#0x0
   \   000042   12....       LCALL   ??HalUARTWrite?relay
    319                HalUARTWrite(0,"12\r\n",4);
   \   000045                ; Setup parameters for call to function HalUARTWrite
   \   000045   7C04         MOV     R4,#0x4
   \   000047   7D00         MOV     R5,#0x0
   \   000049   AA..         MOV     R2,?V0 + 0
   \   00004B   AB..         MOV     R3,?V0 + 1
   \   00004D   8003         SJMP    ??CrossCallReturnLabel_1
    320                break;
    321          
    322              case MySendtest_SINGLE_CLUSTERID:
    323                HalUARTWrite(0,msg->cmd.Data,msg->cmd.DataLength);
   \                     ??DhAppCooderManage_ProcessMSGData_1:
   \   00004F                ; Setup parameters for call to function HalUARTWrite
   \   00004F   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000052   7900         MOV     R1,#0x0
   \   000054   12....       LCALL   ??HalUARTWrite?relay
    324                break;
    325          
    326              case MySendtest_REGUANG_CLUSTERID:
    327                HalUARTWrite(0,msg->cmd.Data,msg->cmd.DataLength);
    328                break;
    329          
    330              case MySendtest_RESHIDU_CLUSTERID:
    331                HalUARTWrite(0,msg->cmd.Data,msg->cmd.DataLength);
    332                break;
    333          
    334              default:
    335                break;
    336            }
    337          }
   \                     ??DhAppCooderManage_ProcessMSGData_0:
   \   000057   80..         SJMP    ?Subroutine3

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   EE           MOV     A,R6
   \   000001   2420         ADD     A,#0x20
   \   000003   F582         MOV     DPL,A
   \   000005   EF           MOV     A,R7
   \   000006   3400         ADDC    A,#0x0
   \   000008   F583         MOV     DPH,A
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   FC           MOV     R4,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   FD           MOV     R5,A
   \   00000F   EE           MOV     A,R6
   \   000010   2422         ADD     A,#0x22
   \   000012   F582         MOV     DPL,A
   \   000014   EF           MOV     A,R7
   \   000015   3400         ADDC    A,#0x0
   \   000017   F583         MOV     DPH,A
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   FA           MOV     R2,A
   \   00001B   A3           INC     DPTR
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   FB           MOV     R3,A
   \   00001E   22           RET
    338          /************************************************************************************************/
    339          
    340          //Ω” ‹¿¥◊‘∑˛ŒÒ∆˜µƒ ˝æ›

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    341          void SampleApp_SerialCMD(mtOSALSerialData_t *cmdMsg)
   \                     SampleApp_SerialCMD:
    342          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 16
   \   000005   74F0         MOV     A,#-0x10
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    343            uint8 i,len,*str=NULL; //len ”–”√ ˝æ›≥§∂»
    344          /********************************************************************/
    345            unsigned char seg7table[16] = {
    346              /* 0       1       2       3       4       5       6      7*/
    347              0xc0,   0xf9,   0xa4,   0xb0,   0x99,   0x92,   0x82,   0xf8,
    348              /* 8       9      A        B       C       D       E      F*/
    349              0x80,   0x90,   0x88,   0x83,   0xc6,   0xa1,   0x86,   0x8e };
   \   00000A   90....       MOV     DPTR,#`?<Constant {192, 249, 164, 176, 153, 146, 130,`
   \   00000D   C082         PUSH    DPL
   \   00000F   85..82       MOV     DPL,?XSP + 0
   \   000012   85..83       MOV     DPH,?XSP + 1
   \   000015   AC82         MOV     R4,DPL
   \   000017   AD83         MOV     R5,DPH
   \   000019   7583..       MOV     DPH,#(`?<Constant {192, 249, 164, 176, 153, 146, 130,` >> 8) & 0xff
   \   00001C   D082         POP     DPL
   \   00001E   7410         MOV     A,#0x10
   \   000020   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    350              //P0DIR
    351            P0DIR |= 0x10;
   \   000023   43FD10       ORL     0xfd,#0x10
    352            P1DIR = 0xff;
   \   000026   75FEFF       MOV     0xfe,#-0x1
    353            P0 |= (0x1<<4);
   \   000029   D284         SETB    0x80.4
    354            /********************************************************************/
    355          
    356          
    357              str=cmdMsg->msg; //÷∏œÚ ˝æ›ø™Õ∑
   \   00002B   8A82         MOV     DPL,R2
   \   00002D   8B83         MOV     DPH,R3
   \   00002F   A3           INC     DPTR
   \   000030   A3           INC     DPTR
   \   000031   E0           MOVX    A,@DPTR
   \   000032   F5..         MOV     ?V0 + 0,A
   \   000034   A3           INC     DPTR
   \   000035   E0           MOVX    A,@DPTR
   \   000036   F5..         MOV     ?V0 + 1,A
    358              len=*str; //msg ¿Ôµƒµ⁄ 1 ∏ˆ◊÷Ω⁄¥˙±Ì∫Û√Êµƒ ˝æ›≥§∂»
   \   000038   85..82       MOV     DPL,?V0 + 0
   \   00003B   F583         MOV     DPH,A
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   FF           MOV     R7,A
    359          /********¥Ú”°≥ˆ¥Æø⁄Ω” ’µΩµƒ ˝æ›£¨”√”⁄Ã· æ*********/
    360              for(i=1;i<=len;i++)
   \   00003F   7E01         MOV     R6,#0x1
   \   000041   8011         SJMP    ??SampleApp_SerialCMD_0
    361              {
    362          
    363                 if('0'<=*(str+i)&&*(str+i)<='9')
    364                 {
    365                   P1=seg7table[*(str+i)-'0'];
    366                   HalUARTWrite(0,str+i,1 );
    367                   HalLedSet (HAL_LED_2, HAL_LED_MODE_OFF);
    368                   HalLedBlink(HAL_LED_1,5,50,1000);
    369                 }
    370                 else if('A'<=*(str+i)&&*(str+i)<='F' || 'a'<=*(str+i)&&*(str+i)<='f')
    371                 {
    372                   if('A'<=*(str+i)&&*(str+i)<='F')
    373                    P1=seg7table[*(str+i)-'A'+10];
    374                   else
    375                     P1=seg7table[*(str+i)-'a'+10];
    376                   HalUARTWrite(0,str+i,1 );
    377                   HalLedSet (HAL_LED_1, HAL_LED_MODE_OFF);
    378                   HalLedBlink(HAL_LED_2,5,50,1000);
    379                 }
    380                 else
    381                 {
    382                   HalUARTWrite(0,"error",5);
   \                     ??SampleApp_SerialCMD_1:
   \   000043                ; Setup parameters for call to function HalUARTWrite
   \   000043   7C05         MOV     R4,#0x5
   \   000045   7D00         MOV     R5,#0x0
   \   000047   7A..         MOV     R2,#`?<Constant "error">` & 0xff
   \   000049   7B..         MOV     R3,#(`?<Constant "error">` >> 8) & 0xff
   \   00004B   7900         MOV     R1,#0x0
   \   00004D   12....       LCALL   ??HalUARTWrite?relay
    383                   P1=0xFF;
   \   000050   7590FF       MOV     0x90,#-0x1
    384                 }
   \                     ??SampleApp_SerialCMD_2:
   \   000053   0E           INC     R6
   \                     ??SampleApp_SerialCMD_0:
   \   000054   EF           MOV     A,R7
   \   000055   C3           CLR     C
   \   000056   9E           SUBB    A,R6
   \   000057   406E         JC      ??SampleApp_SerialCMD_3
   \   000059   8E..         MOV     ?V0 + 2,R6
   \   00005B   E5..         MOV     A,?V0 + 0
   \   00005D   25..         ADD     A,?V0 + 2
   \   00005F   F582         MOV     DPL,A
   \   000061   E5..         MOV     A,?V0 + 1
   \   000063   3400         ADDC    A,#0x0
   \   000065   F583         MOV     DPH,A
   \   000067   E0           MOVX    A,@DPTR
   \   000068   24D0         ADD     A,#-0x30
   \   00006A   C3           CLR     C
   \   00006B   940A         SUBB    A,#0xa
   \   00006D   5021         JNC     ??SampleApp_SerialCMD_4
   \   00006F   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   000072   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000075   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000078   24D0         ADD     A,#-0x30
   \   00007A   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   00007D   7900         MOV     R1,#0x0
   \   00007F   12....       LCALL   ??HalUARTWrite?relay
   \   000082                ; Setup parameters for call to function HalLedSet
   \   000082   7A00         MOV     R2,#0x0
   \   000084   7902         MOV     R1,#0x2
   \   000086   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   000089   7901         MOV     R1,#0x1
   \                     ??SampleApp_SerialCMD_5:
   \   00008B   12....       LCALL   ??HalLedBlink?relay
   \   00008E   80C3         SJMP    ??SampleApp_SerialCMD_2
   \                     ??SampleApp_SerialCMD_4:
   \   000090   E0           MOVX    A,@DPTR
   \   000091   24BF         ADD     A,#-0x41
   \   000093   C3           CLR     C
   \   000094   9406         SUBB    A,#0x6
   \   000096   4008         JC      ??SampleApp_SerialCMD_6
   \   000098   E0           MOVX    A,@DPTR
   \   000099   249F         ADD     A,#-0x61
   \   00009B   C3           CLR     C
   \   00009C   9406         SUBB    A,#0x6
   \   00009E   50A3         JNC     ??SampleApp_SerialCMD_1
   \                     ??SampleApp_SerialCMD_6:
   \   0000A0   E0           MOVX    A,@DPTR
   \   0000A1   24BF         ADD     A,#-0x41
   \   0000A3   C3           CLR     C
   \   0000A4   9406         SUBB    A,#0x6
   \   0000A6   12....       LCALL   ?Subroutine8 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   0000A9   5007         JNC     ??SampleApp_SerialCMD_7
   \   0000AB   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   0000AE   24C9         ADD     A,#-0x37
   \   0000B0   8005         SJMP    ??SampleApp_SerialCMD_8
   \                     ??SampleApp_SerialCMD_7:
   \   0000B2   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   0000B5   24A9         ADD     A,#-0x57
   \                     ??SampleApp_SerialCMD_8:
   \   0000B7   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   0000BA   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   0000BD   7900         MOV     R1,#0x0
   \   0000BF   12....       LCALL   ??HalUARTWrite?relay
   \   0000C2                ; Setup parameters for call to function HalLedSet
   \   0000C2   12....       LCALL   ?Subroutine5 & 0xFFFF
    385              }
   \                     ??CrossCallReturnLabel_3:
   \   0000C5   80C4         SJMP    ??SampleApp_SerialCMD_5
    386              //HalUARTWrite(0,"\n",1 );//ªª––
    387          
    388          
    389              P0DIR &= ~(0x10);
   \                     ??SampleApp_SerialCMD_3:
   \   0000C7   53FDEF       ANL     0xfd,#0xef
    390              P0 &= ~(0x1<<4);
   \   0000CA   C284         CLR     0x80.4
    391              /*uint8 i,len,*str=NULL;
    392              str=cmdMsg->msg;
    393              len=*str;
    394              HalUARTWrite(0,str+1,1);
    395              if(len>=1){
    396                HalUARTWrite(0,str+1,1);
    397                switch(*(str+1))
    398                {
    399                case '0':
    400                  SampleAppPeriodicCounter='0';
    401                  SampleApp_SendPeriodicMessage();
    402                  break;
    403                case '1':
    404                  SampleAppPeriodicCounter='1';
    405                  SampleApp_SendPeriodicMessage();
    406                  break;
    407                case '2':
    408                  SampleAppPeriodicCounter='2';
    409                  SampleApp_SendPeriodicMessage();
    410                  break;
    411                case '3':
    412                  SampleAppPeriodicCounter='3';
    413                  SampleApp_SendPeriodicMessage();
    414                  break;
    415                default:
    416                  break;
    417                }
    418              }  */
    419          }
   \   0000CC   7410         MOV     A,#0x10
   \   0000CE   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000D1   02....       LJMP    ?Subroutine2 & 0xFFFF
   \   0000D4                REQUIRE P0DIR
   \   0000D4                REQUIRE P1DIR
   \   0000D4                REQUIRE _A_P0
   \   0000D4                REQUIRE _A_P1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002   25..         ADD     A,?V0 + 2
   \   000004   FA           MOV     R2,A
   \   000005   E5..         MOV     A,?V0 + 1
   \   000007   3400         ADDC    A,#0x0
   \   000009   FB           MOV     R3,A
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   85..82       MOV     DPL,?XSP + 0
   \   000005   85..83       MOV     DPH,?XSP + 1
   \   000008   E582         MOV     A,DPL
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   F582         MOV     DPL,A
   \   000002   E9           MOV     A,R1
   \   000003   34FF         ADDC    A,#-0x1
   \   000005   F583         MOV     DPH,A
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F590         MOV     0x90,A
   \   00000A                ; Setup parameters for call to function HalUARTWrite
   \   00000A                ; Setup parameters for call to function HalUARTWrite
   \   00000A   7C01         MOV     R4,#0x1
   \   00000C   7D00         MOV     R5,#0x0
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   28           ADD     A,R0
   \   000001   F8           MOV     R0,A
   \   000002   E583         MOV     A,DPH
   \   000004   3400         ADDC    A,#0x0
   \   000006   F9           MOV     R1,A
   \   000007   E8           MOV     A,R0
   \   000008   22           RET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for DhAppCooderManage_NwkState>`:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for SampleAppPeriodicCounter>`:
   \   000000   7A           DB 122

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SerialApp_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SerialApp_CallBack

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??InitUart?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    InitUart

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DongheAppCooder_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DongheAppCooder_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DongheAppCooder_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DongheAppCooder_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DhAppCooderManage_ProcessZDOStateChange?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DhAppCooderManage_ProcessZDOStateChange

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DhAppCooderManage_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DhAppCooderManage_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendPeriodicMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendPeriodicMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DhAppCooderManage_ProcessMSGData?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DhAppCooderManage_ProcessMSGData

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SerialCMD?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SerialCMD

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000009   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hello Wrold!">`:
   \   000000   48656C6C     DB "Hello Wrold!"
   \            6F205772
   \            6F6C6421
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "12\\r\\n">`:
   \   000000   31320D0A     DB "12\015\012"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {192, 249, 164, 176, 153, 146, 130,`:
   \   000000   C0           DB 192
   \   000001   F9           DB 249
   \   000002   A4           DB 164
   \   000003   B0           DB 176
   \   000004   99           DB 153
   \   000005   92           DB 146
   \   000006   82           DB 130
   \   000007   F8           DB 248
   \   000008   80           DB 128
   \   000009   90           DB 144
   \   00000A   88           DB 136
   \   00000B   83           DB 131
   \   00000C   C6           DB 198
   \   00000D   A1           DB 161
   \   00000E   86           DB 134
   \   00000F   8E           DB 142

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "error">`:
   \   000000   6572726F     DB "error"
   \            7200    

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     DhAppCooderManage_HandleKeys       0      0      0
     DhAppCooderManage_ProcessMSGData
                                        0      0     22
       -> HalUARTWrite                  0      0     20
       -> HalUARTWrite                  0      0     20
       -> HalUARTWrite                  0      0     20
       -> HalUARTWrite                  0      0     20
     DhAppCooderManage_ProcessZDOStateChange
                                        2      0      0
       -> HalLedBlink                   4      0      0
       -> osal_start_timerEx            4      0      0
       -> HalLedSet                     4      0      0
       -> HalLedSet                     4      0      0
     DongheAppCooder_Init               0      0      9
       -> afRegister                    0      0     18
       -> RegisterForKeys               0      0     18
       -> InitUart                      0      0     18
       -> MT_UartRegisterTaskID         0      0     18
       -> HalUARTWrite                  0      0     18
     DongheAppCooder_ProcessEvent       0      0     12
       -> osal_msg_receive              0      0     24
       -> SampleApp_SerialCMD           0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> DhAppCooderManage_ProcessMSGData
                                        0      0     24
       -> HalLedSet                     0      0     24
       -> HalLedBlink                   0      0     24
       -> HalLedBlink                   0      0     24
     InitUart                           2      0     38
       -> HalUARTOpen                   4      0     58
     SampleApp_SendPeriodicMessage      0      0     19
       -> AF_DataRequest                0      0     38
     SampleApp_SerialCMD                2      0     40
       -> HalUARTWrite                  0      0     56
       -> HalUARTWrite                  0      0     56
       -> HalLedSet                     0      0     56
       -> HalLedBlink                   0      0     56
       -> HalUARTWrite                  0      0     56
       -> HalLedSet                     0      0     56
       -> HalLedBlink                   0      0     56
     SerialApp_CallBack                 2      0     19
       -> HalUARTRead                   0      0     38


   Segment part sizes:

     Function/Label                                  Bytes
     --------------                                  -----
     _A_P0                                              1
     _A_P1                                              1
     P0DIR                                              1
     P1DIR                                              1
     DhAppCooderManage_TaskID                           1
     DhAppCooderManage_NwkState                         1
     DhAppCooderManage_TransID                          1
     MySendtest_Periodic_DstAddr                       12
     MySendtest_epDesc                                  6
     SampleAppPeriodicCounter                           1
     MySendtest_OUTClusterList                          8
     MySendtest_INClusterList                           8
     MySendtest_SimpleDesc                             12
     SerialApp_CallBack                                62
     ?Subroutine0                                       5
     InitUart                                         111
     ?Subroutine1                                       7
     DongheAppCooder_Init                              92
     DongheAppCooder_ProcessEvent                     131
     ?Subroutine2                                       5
     ?Subroutine5                                      10
     ?Subroutine10                                     12
     DhAppCooderManage_ProcessZDOStateChange
                                                       50
     DhAppCooderManage_HandleKeys                       3
     SampleApp_SendPeriodicMessage                     69
     ?Subroutine3                                       5
     DhAppCooderManage_ProcessMSGData
                                                       89
     ?Subroutine4                                      31
     SampleApp_SerialCMD                              212
     ?Subroutine9                                      11
     ?Subroutine8                                      11
     ?Subroutine7                                      15
     ?Subroutine6                                       9
     ?<Initializer for DhAppCooderManage_NwkState>      1
     ?<Initializer for SampleAppPeriodicCounter>        1
     ??SerialApp_CallBack?relay                         6
     ??InitUart?relay                                   6
     ??DongheAppCooder_Init?relay                       6
     ??DongheAppCooder_ProcessEvent?relay               6
     ??DhAppCooderManage_ProcessZDOStateChange?relay    6
     ??DhAppCooderManage_HandleKeys?relay               6
     ??SampleApp_SendPeriodicMessage?relay              6
     ??DhAppCooderManage_ProcessMSGData?relay           6
     ??SampleApp_SerialCMD?relay                        6
     ?<Constant {0}>                                   10
     ?<Constant "Hello Wrold!">                        13
     ?<Constant "12\r\n">                               5
     ?<Constant {192, 249, 164, 176, 153, 146, 130,    16
     ?<Constant "error">                                6

 
 940 bytes in segment BANKED_CODE
  54 bytes in segment BANK_RELAYS
   4 bytes in segment SFR_AN
   2 bytes in segment XDATA_I
   2 bytes in segment XDATA_ID
  78 bytes in segment XDATA_ROM_C
  20 bytes in segment XDATA_Z
 
 996 bytes of CODE  memory
  78 bytes of CONST memory
   0 bytes of DATA  memory (+ 4 bytes shared)
  22 bytes of XDATA memory

Errors: none
Warnings: none
